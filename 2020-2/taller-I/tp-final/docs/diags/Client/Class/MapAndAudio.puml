@startuml
class Audio {
    - bool isMusic
    - int volume
    + void volumeDownWithDist(double dist)
    + void play()
    + void playWithMaxVolume()
    + void stop()
}
class AudioManager {
    - map<int, Audio*> audiotracks
    - void garbageCollector()
    + bool loadAndCheckTrack(int id, string& filename)
    + void playWithId(int id)
    + void playWithMaxVolume(int id)
    + void playOnVariableVolumeWithId(int id, double dist)
    + void stopWithId(int id)
}
class ClientMapLoader {
    - int dimx, dimy
    + int* getWallIdMatrix()
    + DoorTile getWallIdMatrix()
    + int convertYamlIdToSkinId(int yamlId)
}
class CommandExecuter {
    + void playDyingSound(int gunId, int playerId)
    + void playExplosionSound()
    + void openDoor()
    + void playShootingSounds(int shooterId)
    + void playDoorOpeningSounds(int x, int y)
}
class DoorTile {
    + char state
    + bool isDoor
    + float timer
    + void changeState()
    + void restart()
    + void updateTimer(float time)
}
class DoorTimer {
    - Map& map
    - bool& alive
    + void run()
}
class Map {
    + DoorTile* doors;
    + int* matrix
    + int dimx, dimy
    + void updateTimers(float time)
    + bool isDoor(int x, int y)
    + char getDoorState(int x, int y)
    + void switchDoorState(int x, int y)
    + void forceDoorState(int x, int y)
}

CommandExecuter --> Map
CommandExecuter --> AudioManager
CommandExecuter --> ClientMapLoader
AudioManager --> Audio
Map -up-> DoorTile
Map --> DoorTimer
Map ..> ClientMapLoader
DoorTimer --> Map

DoorTimer -right-|> Thread
@enduml