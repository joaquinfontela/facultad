TestCase subclass: #AlgoFixTestErrores	instanceVariableNames: 'precision'	classVariableNames: ''	package: 'TP1-Tests'!!AlgoFixTestErrores methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 20:32'!test05pintorLanzaErrorCuandoSeLePideObtenerValorManoDeObraConMetrosCuadradosAPintarMenorA0	| pintor alba |		alba := (Pintura new) inicializarConNombre: 'alba' precioPorLitro: 150 manosPincel: 1 manosRodillo: 1. 		self should: [ 		pintor := (PintorDeRodillo new) obtenerValorManoDeObraConMetrosCuadrados: -10 yPintura: alba 		 ] raise: (ValorNegativoError).	self should: [ 		pintor := (PintorDePincel new) obtenerValorManoDeObraConMetrosCuadrados: -10 yPintura: alba 		 ] raise: (ValorNegativoError).		 ! !!AlgoFixTestErrores methodsFor: 'tests' stamp: 'joaquinfontela 5/21/2020 16:24'!test01pintorLanzaErrorCuandoSeInicializaConValorHoraNegativo	| pintor |		self should: [ 		pintor := (PintorDePincel new) inicializarConNombre: 'Joaquin' yValorHora: -100.		 ] raise: (ValorNegativoError).		self should: [ 		pintor := (PintorDeRodillo new) inicializarConNombre: 'Joaquin' yValorHora: -100.		 ] raise: (ValorNegativoError).		 ! !!AlgoFixTestErrores methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 20:18'!test04pinturaLanzaErrorCuandoSeInicializaManosRodilloNegativo	| pintura |		self should: [ 		pintura := (Pintura new) inicializarConNombre: 'alba' precioPorLitro: 100 manosPincel: 1 manosRodillo: -2.		 ] raise: (ValorNegativoError).		 ! !!AlgoFixTestErrores methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 20:18'!test03pinturaLanzaErrorCuandoSeInicializaManosPincelNegativo	| pintura |		self should: [ 		pintura := (Pintura new) inicializarConNombre: 'alba' precioPorLitro: 100 manosPincel: -1 manosRodillo: 1.		 ] raise: (ValorNegativoError).		 ! !!AlgoFixTestErrores methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 20:32'!test06pintorLanzaErrorCuandoSeLePideObtenerValorMaterialesConMetrosCuadradosAPintarMenorA0	| pintor alba |		alba := (Pintura new) inicializarConNombre: 'alba' precioPorLitro: 150 manosPincel: 1 manosRodillo: 1. 		self should: [ 		pintor := (PintorDeRodillo new) obtenerValorMaterialesConMetrosCuadrados: -10 yPintura: alba.		 ] raise: (ValorNegativoError).	self should: [ 		pintor := (PintorDePincel new) obtenerValorMaterialesConMetrosCuadrados: -10 yPintura: alba.		 ] raise: (ValorNegativoError).		 ! !!AlgoFixTestErrores methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 20:34'!test07presupuestoLanzaErrorCuandoSeLoInicializaConUnValorMenorA0	| presupuesto |		self should: [ 		presupuesto := (Presupuesto new) inicializarConResponsable: 'Joaquin' yValor: -35. 		 ] raise: (ValorNegativoError).		 ! !!AlgoFixTestErrores methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 20:18'!test02pinturaLanzaErrorCuandoSeInicializaConPrecioPorLitroNegativo	| pintura |		self should: [ 		pintura := (Pintura new) inicializarConNombre: 'alba' precioPorLitro: -100 manosPincel: 1 manosRodillo: 1.		 ] raise: (ValorNegativoError).		 ! !!AlgoFixTestErrores methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 20:46'!test09pinturaLanzaErrorCuandoSeCalculaElPrecioDeUnaCantidadNegativa	| alba |		alba := (Pintura new) inicializarConNombre: 'alba' precioPorLitro: 100 manosPincel: 1 manosRodillo: 1. 		self should: [ 		alba obtenerPrecio: -10.		 ] raise: ValorNegativoError.		 ! !!AlgoFixTestErrores methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 20:40'!test08pidoElMejorPresupuestoSinHaberRegistradoNingunPintor	| algoFix alba presupuesto |		algoFix := AlgoFix new.	alba := (Pintura new) inicializarConNombre: 'alba' precioPorLitro: 100 manosPincel: 1 manosRodillo: 1. 		self should: [ 		presupuesto := algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 50 conPintura: alba.		 ] raise: SinPintoresError.		 ! !TestCase subclass: #AlgoFixTestPropios	instanceVariableNames: 'precision'	classVariableNames: ''	package: 'TP1-Tests'!!AlgoFixTestPropios methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 17:52'!test27inicializoUnaListaDePintoresYUnaPinturaYObtengoElPresupuestoMasBarato	| optimizador pintor1 pintor2 pintor3 pintores alba presupuesto |			optimizador := OptimizadorDePresupuesto new.	pintores := OrderedCollection new.		pintor1 := (PintorDePincel new) inicializarConNombre: 'Joaquin' yValorHora: 300.	pintor2 := (PintorDePincel new) inicializarConNombre: 'Martin' yValorHora: 350.	pintor3 := (PintorDeRodillo new) inicializarConNombre: 'Alberto' yValorHora: 450.		alba := (Pintura new) inicializarConNombre: 'alba' precioPorLitro: 100 manosPincel: 1 manosRodillo: 1. 		pintores add: pintor1.	pintores add: pintor2.	pintores add: pintor3.		presupuesto := optimizador obtenerPresupuestoMasBaratoParaPintarMetrosCuadrados: 60 conPintura: alba yPintores: pintores.		self assert: (presupuesto responsable) equals: 'Joaquin'.	self assert: (presupuesto valor) equals: (42000).! !!AlgoFixTestPropios methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 01:23'!test10inicializoUnPintorDeRodilloYObtengoLaCantidadDeHorasQueTardaEnPintarUnMetroCuadrado	| pintor horasEnPintarUnM2 |		pintor := (PintorDeRodillo new) inicializarConNombre: 'Joaquin' yValorHora: 250.		horasEnPintarUnM2 := pintor horasEnPintarUnMetroCuadrado.		self assert: horasEnPintarUnM2 equals: (1). 	! !!AlgoFixTestPropios methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 01:29'!test13inicializoUnPintorDeRodilloConValorHora250Y40MetrosCuadradosAPintarYEsperoUnValorDeManoDeObraDe24000	| alba pintor metrosCuadradosAPintar valorManoDeObra |		metrosCuadradosAPintar := 40.		alba := ( Pintura new ) inicializarConNombre: 'alba' precioPorLitro: 200 manosPincel: 2 manosRodillo: 1.		pintor := ( PintorDeRodillo new ) inicializarConNombre: 'Joaquin' yValorHora: 250.		valorManoDeObra := pintor obtenerValorManoDeObraConMetrosCuadrados: metrosCuadradosAPintar yPintura: alba.		self assert: valorManoDeObra equals: (10000). ! !!AlgoFixTestPropios methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 17:13'!test19inicializoUnaCalculadoraDePresupuestoYObtengoLosAtributosDelPresupuestoCalculado	| calculadora presupuesto |		calculadora := CalculadoraDePresupuesto new.		presupuesto := calculadora obtenerPresupuestoConValorManoDeObra: 25000 valorMateriales: 50000 yResponsable: 'Joaquin'.		self assert: (presupuesto valor) equals: (75000).	self assert: (presupuesto responsable) equals: 'Joaquin'.	! !!AlgoFixTestPropios methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 01:39'!test15inicializoUnPintorDeRodilloYObtengoLaCantidadDeLitrosDePinturaQueUsaPorMetroCuadrado	| pintor litrosDePinturaPorM2 |		pintor := (PintorDeRodillo new) inicializarConNombre: 'Joaquin' yValorHora: 250.		litrosDePinturaPorM2 := pintor litrosDePinturaParaUnMetroCuadrado.		self assert: litrosDePinturaPorM2 equals: (5). 	! !!AlgoFixTestPropios methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 01:28'!test12inicializoUnPintorDePincelConValorHora200Y60MetrosCuadradosAPintarYEsperoUnValorDeManoDeObraDe24000	| alba pintor metrosCuadradosAPintar valorManoDeObra |		metrosCuadradosAPintar := 60.	"50% de descuento!!!!!!"		alba := ( Pintura new ) inicializarConNombre: 'alba' precioPorLitro: 200 manosPincel: 2 manosRodillo: 1.		pintor := ( PintorDePincel new ) inicializarConNombre: 'Joaquin' yValorHora: 200.		valorManoDeObra := pintor obtenerValorManoDeObraConMetrosCuadrados: metrosCuadradosAPintar yPintura: alba.		self assert: valorManoDeObra equals: (24000). ! !!AlgoFixTestPropios methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 17:26'!test25inicializoUnaListaDePintoresYUnaPinturaYObtengoElPresupuestoMasBarato	| optimizador pintor1 pintor2 pintor3 pintores alba presupuesto |			optimizador := OptimizadorDePresupuesto new.	pintores := OrderedCollection new.		pintor1 := (PintorDePincel new) inicializarConNombre: 'Joaquin' yValorHora: 300.	pintor2 := (PintorDePincel new) inicializarConNombre: 'Martin' yValorHora: 350.	pintor3 := (PintorDeRodillo new) inicializarConNombre: 'Alberto' yValorHora: 450.		alba := (Pintura new) inicializarConNombre: 'alba' precioPorLitro: 300 manosPincel: 1 manosRodillo: 1. 		pintores add: pintor1.	pintores add: pintor2.	pintores add: pintor3.		presupuesto := optimizador obtenerPresupuestoMasBaratoParaPintarMetrosCuadrados: 30 conPintura: alba yPintores: pintores.		self assert: (presupuesto responsable) equals: 'Joaquin'.	self assert: (presupuesto valor) equals: (54000).! !!AlgoFixTestPropios methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 01:33'!test03InicializoUnaPinturaConUnPrecioPorLitroYObtengoElPrecioDe4Litros	| pintura |		pintura := (Pintura new) inicializarConNombre: 'Alba' precioPorLitro: 100 manosPincel: 1 manosRodillo: 2.		self assert: (pintura obtenerPrecio: 4) equals: (400).				! !!AlgoFixTestPropios methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 17:27'!test26inicializoUnaListaDePintoresYUnaPinturaYObtengoElPresupuestoMasBarato	| optimizador pintor1 pintor2 pintor3 pintores alba presupuesto |			optimizador := OptimizadorDePresupuesto new.	pintores := OrderedCollection new.		pintor1 := (PintorDePincel new) inicializarConNombre: 'Joaquin' yValorHora: 300.	pintor2 := (PintorDePincel new) inicializarConNombre: 'Martin' yValorHora: 350.	pintor3 := (PintorDeRodillo new) inicializarConNombre: 'Alberto' yValorHora: 450.		alba := (Pintura new) inicializarConNombre: 'alba' precioPorLitro: 100 manosPincel: 1 manosRodillo: 1. 		pintores add: pintor1.	pintores add: pintor2.	pintores add: pintor3.		presupuesto := optimizador obtenerPresupuestoMasBaratoParaPintarMetrosCuadrados: 30 conPintura: alba yPintores: pintores.		self assert: (presupuesto responsable) equals: 'Alberto'.	self assert: (presupuesto valor) equals: (28500).! !!AlgoFixTestPropios methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 20:02'!test29creoDosPresupuestosYLosComparo	| presupuesto1 presupuesto2 |		presupuesto1 := (Presupuesto new) inicializarConResponsable: 'Joaquin' yValor: 20000.		presupuesto2 := (Presupuesto new) inicializarConResponsable: 'Martin' yValor: 25000.		self assert: (presupuesto1 tieneUnMenorValorQue: presupuesto2).	self deny: (presupuesto2 tieneUnMenorValorQue: presupuesto1).! !!AlgoFixTestPropios methodsFor: 'tests' stamp: 'joaquinfontela 5/19/2020 22:57'!test05InicializoUnaPinturaConTresManosRodilloYObtengoElValorVerificandoQueSeaElMismo	| pintura |		pintura := (Pintura new) inicializarConNombre: 'Alba' precioPorLitro: 100 manosPincel: 1 manosRodillo: 3.		self assert: pintura obtenerManosRodillo equals: (3).				! !!AlgoFixTestPropios methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 17:17'!test23inicializoUnPintorDeRodilloUnaPinturaYMetrosCuadradosAPintarYObtengoLosAtributosDelPresupuesto	| pintor alba metrosCuadradosAPintar presupuesto |			pintor := (PintorDeRodillo new) inicializarConNombre: 'Joaquin' yValorHora: 300.		alba := (Pintura new) inicializarConNombre: 'alba' precioPorLitro: 350 manosPincel: 2 manosRodillo: 1.		metrosCuadradosAPintar := 40.		presupuesto := pintor obtenerPresupuestoConMetrosCuadrados: metrosCuadradosAPintar yPintura: alba.			self assert: (presupuesto valor) equals: (82000).	self assert: (presupuesto responsable) equals: 'Joaquin'.! !!AlgoFixTestPropios methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 01:10'!test08inicializoUnaPinturaConTresManosRodilloYUnPintorDeRodilloYObtengoTresManos	| alba pintor manos |		alba := ( Pintura new ) inicializarConNombre: 'alba' precioPorLitro: 200 manosPincel: 2 manosRodillo: 3.		pintor := ( PintorDeRodillo new ) inicializarConNombre: 'Joaquin' yValorHora: 200.		manos := pintor obtenerManos: alba.		self assert: manos equals: (3). ! !!AlgoFixTestPropios methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 17:13'!test20inicializoUnPresupuestoYObtengoSuResponsable	| presupuesto |		presupuesto := (Presupuesto new) inicializarConResponsable: 'Joaquin' yValor: 75000.		self assert: (presupuesto responsable) equals: 'Joaquin'. 		! !!AlgoFixTestPropios methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 01:38'!test14inicializoUnPintorDePincelYObtengoLaCantidadDeLitrosDePinturaQueUsaPorMetroCuadrado	| pintor litrosDePinturaPorM2 |		pintor := (PintorDePincel new) inicializarConNombre: 'Joaquin' yValorHora: 250.		litrosDePinturaPorM2 := pintor litrosDePinturaParaUnMetroCuadrado.		self assert: litrosDePinturaPorM2 equals: (4). 	! !!AlgoFixTestPropios methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 17:17'!test24inicializoUnPintorDePincelUnaPinturaYMasDe40MetrosCuadradosAPintarYObtengoLosAtributosDelPresupuestoEsperandoUnDescuento	| pintor alba metrosCuadradosAPintar presupuesto |			pintor := (PintorDePincel new) inicializarConNombre: 'Joaquin' yValorHora: 250.		alba := (Pintura new) inicializarConNombre: 'alba' precioPorLitro: 400 manosPincel: 2 manosRodillo: 1.		metrosCuadradosAPintar := 50.		presupuesto := pintor obtenerPresupuestoConMetrosCuadrados: metrosCuadradosAPintar yPintura: alba.			self assert: (presupuesto valor) equals: (185000).	self assert: (presupuesto responsable) equals: 'Joaquin'.! !!AlgoFixTestPropios methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 17:41'!test28inicializoUnaListaDePresupuestosYUnOptimizadorYObtengoElPresupuestoDeMenorValor	| presupuesto1 presupuesto2 presupuesto3 presupuestos presupuestoMasBarato optimizador |		optimizador := OptimizadorDePresupuesto new.	presupuestos := OrderedCollection new.		presupuesto1 := (Presupuesto new) inicializarConResponsable: 'Joaquin' yValor: 50000.	presupuesto2 := (Presupuesto new) inicializarConResponsable: 'Martin' yValor: 55000.	presupuesto3 := (Presupuesto new) inicializarConResponsable: 'Alberto' yValor: 45000.		presupuestos add: presupuesto1.	presupuestos add: presupuesto2.	presupuestos add: presupuesto3.		presupuestoMasBarato := optimizador obtenerPresupuestoMasBarato: presupuestos.		self assert: (presupuestoMasBarato valor) equals: (45000).	self assert: (presupuestoMasBarato responsable) equals: 'Alberto'.				! !!AlgoFixTestPropios methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 01:21'!test09inicializoUnPintorDePincelYObtengoLaCantidadDeHorasQueTardaEnPintarUnMetroCuadrado	| pintor horasEnPintarUnM2 |		pintor := (PintorDePincel new) inicializarConNombre: 'Joaquin' yValorHora: 250.		horasEnPintarUnM2 := pintor horasEnPintarUnMetroCuadrado.		self assert: horasEnPintarUnM2 equals: (2). 	! !!AlgoFixTestPropios methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 17:17'!test22inicializoUnPintorDePincelUnaPinturaYMetrosCuadradosAPintarYObtengoLosAtributosDelPresupuesto	| pintor alba metrosCuadradosAPintar presupuesto |			pintor := (PintorDePincel new) inicializarConNombre: 'Joaquin' yValorHora: 250.		alba := (Pintura new) inicializarConNombre: 'alba' precioPorLitro: 400 manosPincel: 2 manosRodillo: 1.		metrosCuadradosAPintar := 25.		presupuesto := pintor obtenerPresupuestoConMetrosCuadrados: metrosCuadradosAPintar yPintura: alba.			self assert: (presupuesto valor) equals: (105000).	self assert: (presupuesto responsable) equals: 'Joaquin'.! !!AlgoFixTestPropios methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 01:40'!test16inicializoUnPintorDePincelUnaPinturaConValorPorLitro300Y50MetrosCuadradosAPintarYEsperoUnValorDeMaterialesDe120000	| alba pintor metrosCuadradosAPintar valorMateriales |		metrosCuadradosAPintar := 50.		alba := ( Pintura new ) inicializarConNombre: 'alba' precioPorLitro: 300 manosPincel: 2 manosRodillo: 1.		pintor := ( PintorDePincel new ) inicializarConNombre: 'Joaquin' yValorHora: 250.		valorMateriales := pintor obtenerValorMaterialesConMetrosCuadrados: metrosCuadradosAPintar yPintura: alba.		self assert: valorMateriales equals: (120000). ! !!AlgoFixTestPropios methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 01:28'!test11inicializoUnPintorDePincelConValorHora200Y30MetrosCuadradosAPintarYEsperoUnValorDeManoDeObraDe24000	| alba pintor metrosCuadradosAPintar valorManoDeObra |		metrosCuadradosAPintar := 30.		alba := ( Pintura new ) inicializarConNombre: 'alba' precioPorLitro: 200 manosPincel: 2 manosRodillo: 1.		pintor := ( PintorDePincel new ) inicializarConNombre: 'Joaquin' yValorHora: 200.		valorManoDeObra := pintor obtenerValorManoDeObraConMetrosCuadrados: metrosCuadradosAPintar yPintura: alba.		self assert: valorManoDeObra equals: (24000). ! !!AlgoFixTestPropios methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 01:04'!test06inicializoUnPintorDePincelConUnValorHoraDe200YLePidoElValorHoraPintandoMasDe40MetrosCuadradosEsperando100	| pintor valorHora metrosCuadradosAPintar |		metrosCuadradosAPintar := 50.		pintor := (PintorDePincel new) inicializarConNombre: 'Joaquin' yValorHora: 200.		valorHora := pintor obtenerValorHora: metrosCuadradosAPintar.		self assert: valorHora equals: (100).	  			! !!AlgoFixTestPropios methodsFor: 'tests' stamp: 'joaquinfontela 5/21/2020 19:46'!test17inicializoUnPintorDeRodilloUnaPinturaConValorPorLitro250Y35MetrosCuadradosAPintarYEsperoUnValorDeMaterialesDe43750	| alba pintor metrosCuadradosAPintar valorMateriales |		metrosCuadradosAPintar := 35.		alba := ( Pintura new ) inicializarConNombre: 'alba' precioPorLitro: 250 manosPincel: 2 manosRodillo: 1.		pintor := ( PintorDeRodillo new ) inicializarConNombre: 'Joaquin' yValorHora: 250.		valorMateriales := pintor obtenerValorMaterialesConMetrosCuadrados: metrosCuadradosAPintar yPintura: alba.		self assert: valorMateriales equals: (43750). ! !!AlgoFixTestPropios methodsFor: 'tests' stamp: 'joaquinfontela 5/19/2020 22:56'!test04InicializoUnaPinturaConDosManosPincelYObtengoElValorVerificandoQueSeaElMismo	| pintura |		pintura := (Pintura new) inicializarConNombre: 'Alba' precioPorLitro: 100 manosPincel: 2 manosRodillo: 2.		self assert: pintura obtenerManosPincel equals: (2).				! !!AlgoFixTestPropios methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 01:09'!test07inicializoUnaPinturaConDosManosPincelYUnPintorDePincelYObtengoDosManos	| alba pintor manos |		alba := ( Pintura new ) inicializarConNombre: 'alba' precioPorLitro: 200 manosPincel: 2 manosRodillo: 1.		pintor := ( PintorDePincel new ) inicializarConNombre: 'Joaquin' yValorHora: 200.		manos := pintor obtenerManos: alba.		self assert: manos equals: (2). ! !!AlgoFixTestPropios methodsFor: 'tests' stamp: 'joaquinfontela 5/20/2020 17:13'!test21inicializoUnPresupuestoYObtengoSuValor	| presupuesto |		presupuesto := (Presupuesto new) inicializarConResponsable: 'Joaquin' yValor: 75000.		self assert: (presupuesto valor) equals: (75000). 		! !